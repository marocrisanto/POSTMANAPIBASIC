{
	"info": {
		"_postman_id": "4a588ed2-aaa5-4dad-bc70-e28350b7a71a",
		"name": "API USUARIOS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30137718"
	},
	"item": [
		{
			"name": "API USUARIOS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Devuelva las respuestas\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"username\");",
							"});",
							"",
							"pm.test(\"Devuelva las respuestas\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"address\");",
							"});",
							"",
							"pm.test(\"Devuelva las respuestas\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"city\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(800);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "API USUARIOS V GPT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"La respuesta contiene los campos esperados\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.an('array').that.is.not.empty;",
							"",
							"    responseJson.forEach(user => {",
							"        pm.expect(user).to.have.property('username');",
							"        pm.expect(user).to.have.nested.property('address.city');",
							"    });",
							"});",
							"",
							"pm.test(\"Tiempo de respuesta es menor a 800 ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(800);",
							"});",
							"",
							"/*Limitaciones de la versión anterior:",
							"",
							"\t•\tVerificación de estructura: Solo verifica si los términos están presentes en la respuesta, pero no asegura que estén en la estructura correcta (por ejemplo, address podría estar en cualquier parte del texto y no necesariamente como un objeto JSON).",
							"\t•\tMenor especificidad: No comprueba que username sea un campo específico en un objeto, ni que city esté dentro de address. Esto puede ser problemático si la API cambia y devuelve estos términos en un contexto diferente.",
							"",
							"Resumen:",
							"",
							"\t•\tLa versión anterior es ideal para una validación rápida y sencilla cuando solo importa que ciertas palabras aparezcan en la respuesta.",
							"\t•\tLa versión más detallada es más robusta porque valida que la estructura y los datos de la respuesta sean exactamente lo que se espera. Esto es especialmente útil cuando se necesita asegurar de que la API sigue un formato específico.",
							"",
							"    */",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}